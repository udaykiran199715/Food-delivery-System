{"ast":null,"code":"import { SELECT_CITY, LOGIN, SIGNUP, ADD_TO_CART, ADD_QUANTITY, SUB_QUANTITY } from './ActionTypes';\n\nconst reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    //    case ADD_PRODUCT: {\n    //         const product = {\n    //        ...payload,\n    //        price: '₹' + Number(payload.price),\n    //        id: state.product_arr[state.product_arr.length-1].id + 1\n    //    }\n    //        return {\n    //            ...state,\n    //            product_arr:[...state.product_arr, product]\n    //        }\n    //    }\n    case SELECT_CITY:\n      {\n        return { ...state,\n          city: payload\n        };\n      }\n\n    case LOGIN:\n      {\n        console.log(payload);\n        return { ...state,\n          usersArr: state.usersArr.filter(item => {\n            if ((item.username == payload.username || item.phone == payload.phone) && item.password == payload.password) {\n              //    return {...state,userName:item.username, isAuth:true }\n              return item;\n            }\n          }),\n          isAuth: state.usersArr.filter(item => {\n            if ((item.username === payload.username || item.phone === payload.phone) && item.password === payload.password) {\n              return true;\n            }\n          }) // .map(item => state.userName = item.username)\n          // usersArr: state.usersArr.filter(item => {item.username===payload.username || item.phone === payload.phone && item.password === payload.password} ? {...state, userName:item.username, isAuth:true}:item)\n\n        };\n      }\n\n    case SIGNUP:\n      {\n        console.log(payload);\n        return { ...state,\n          usersArr: [...state.usersArr, payload]\n        };\n      }\n\n    case ADD_TO_CART:\n      {\n        return { ...state,\n          cartArr: [...state.cartArr, payload]\n        };\n      }\n\n    case ADD_QUANTITY:\n      {\n        return { ...state,\n          //    quantity: state.quantity >= 1 && state.quantity + Number(payload)\n          quantity: state.quantity + 1\n        };\n      }\n\n    case SUB_QUANTITY:\n      {\n        return { ...state,\n          // quantity: state.quantity >= 1 && state.quantity - Number(payload)\n          quantity: state.quantity > 1 && state.quantit - 1\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/uday/food-delivery-system/src/Redux/Reducer.js"],"names":["SELECT_CITY","LOGIN","SIGNUP","ADD_TO_CART","ADD_QUANTITY","SUB_QUANTITY","reducer","state","type","payload","city","console","log","usersArr","filter","item","username","phone","password","isAuth","cartArr","quantity","quantit"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,WAApC,EAAkDC,YAAlD,EAAgEC,YAAhE,QAAmF,eAAnF;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQ;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAR,KAA4B;AAEzC,UAAQD,IAAR;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,SAAKR,WAAL;AAAmB;AACd,eAAO,EACH,GAAGO,KADA;AAEHG,UAAAA,IAAI,EAAED;AAFH,SAAP;AAKJ;;AAED,SAAKR,KAAL;AAAa;AACZU,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACG,eAAO,EACH,GAAGF,KADA;AAEHM,UAAAA,QAAQ,EAAEN,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBC,IAAI,IAAI;AACpC,gBAAG,CAACA,IAAI,CAACC,QAAL,IAAiBP,OAAO,CAACO,QAAzB,IAAqCD,IAAI,CAACE,KAAL,IAAaR,OAAO,CAACQ,KAA3D,KAAqEF,IAAI,CAACG,QAAL,IAAiBT,OAAO,CAACS,QAAjG,EAA2G;AAC1G;AACA,qBAAOH,IAAP;AACA;AACJ,WALS,CAFP;AAWPI,UAAAA,MAAM,EAAEZ,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBC,IAAI,IAAI;AACjC,gBAAG,CAACA,IAAI,CAACC,QAAL,KAAkBP,OAAO,CAACO,QAA1B,IAAsCD,IAAI,CAACE,KAAL,KAAcR,OAAO,CAACQ,KAA7D,KAAuEF,IAAI,CAACG,QAAL,KAAkBT,OAAO,CAACS,QAApG,EAA8G;AAC1G,qBAAO,IAAP;AACH;AACJ,WAJM,CAXD,CAgBN;AACA;;AAjBM,SAAP;AAoBH;;AAED,SAAKhB,MAAL;AAAc;AACVS,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,eAAO,EACH,GAAGF,KADA;AAEHM,UAAAA,QAAQ,EAAC,CAAC,GAAGN,KAAK,CAACM,QAAV,EAAmBJ,OAAnB;AAFN,SAAP;AAIH;;AAED,SAAKN,WAAL;AAAmB;AAEf,eAAO,EACH,GAAGI,KADA;AAEHa,UAAAA,OAAO,EAAC,CAAC,GAAGb,KAAK,CAACa,OAAV,EAAkBX,OAAlB;AAFL,SAAP;AAIH;;AAED,SAAKL,YAAL;AAAoB;AAChB,eAAO,EACH,GAAGG,KADA;AAEN;AACAc,UAAAA,QAAQ,EAAEd,KAAK,CAACc,QAAN,GAAiB;AAHrB,SAAP;AAKH;;AAED,SAAKhB,YAAL;AAAoB;AACnB,eAAO,EACH,GAAGE,KADA;AAEH;AACAc,UAAAA,QAAQ,EAAEd,KAAK,CAACc,QAAN,GAAiB,CAAjB,IAAsBd,KAAK,CAACe,OAAN,GAAgB;AAH7C,SAAP;AAKH;;AAKE;AACI,aAAOf,KAAP;AAjFR;AAoFF,CAtFD;;AAwFA,eAAeD,OAAf","sourcesContent":["import {SELECT_CITY, LOGIN, SIGNUP, ADD_TO_CART,  ADD_QUANTITY, SUB_QUANTITY} from './ActionTypes'\n\nconst reducer = (state, {type, payload}) => {\n\n   switch( type ) {\n\n    //    case ADD_PRODUCT: {\n    //         const product = {\n    //        ...payload,\n    //        price: '₹' + Number(payload.price),\n    //        id: state.product_arr[state.product_arr.length-1].id + 1\n    //    }\n    //        return {\n    //            ...state,\n    //            product_arr:[...state.product_arr, product]\n    //        }\n    //    }\n       case SELECT_CITY : {\n            return {\n                ...state,\n                city: payload\n\n            }\n       }\n\n       case LOGIN : {\n        console.log(payload)\n           return {\n               ...state,\n               usersArr: state.usersArr.filter(item => {\n                   if((item.username == payload.username || item.phone== payload.phone) && item.password == payload.password) {\n                    //    return {...state,userName:item.username, isAuth:true }\n                    return item\n                   }\n               }),\n\n\n\n           isAuth: state.usersArr.filter(item => {\n                if((item.username === payload.username || item.phone=== payload.phone) && item.password === payload.password) {\n                    return true\n                }\n            })\n            // .map(item => state.userName = item.username)\n            // usersArr: state.usersArr.filter(item => {item.username===payload.username || item.phone === payload.phone && item.password === payload.password} ? {...state, userName:item.username, isAuth:true}:item)\n\n           }\n       }\n\n       case SIGNUP : {\n           console.log(payload)\n           return {\n               ...state,\n               usersArr:[...state.usersArr,payload]\n           }\n       }\n\n       case ADD_TO_CART : {\n           \n           return {\n               ...state,\n               cartArr:[...state.cartArr,payload]\n           }\n       }\n\n       case ADD_QUANTITY : {\n           return {\n               ...state,\n            //    quantity: state.quantity >= 1 && state.quantity + Number(payload)\n            quantity: state.quantity + 1\n           }\n       }\n\n       case SUB_QUANTITY : {\n        return {\n            ...state,\n            // quantity: state.quantity >= 1 && state.quantity - Number(payload)\n            quantity: state.quantity > 1 && state.quantit - 1\n        }\n    }\n\n\n\n\n       default:\n           return state\n\n   }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}